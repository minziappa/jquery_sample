apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'war'

buildscript {
	repositories { 
		mavenCentral()
		jcenter()
		maven {
			url "https://plugins.gradle.org/m2/"
		}
	}
	dependencies { 
    	classpath 'org.ajoberstar:gradle-jacoco:0.1.0'
    	classpath 'org.gretty:gretty:+'
	}
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
	mavenLocal()
    mavenCentral()
    maven { url "http://www.egovframe.go.kr/maven/" }
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

// For provided jars
configurations {
	provided
}

compileJava.options.encoding = 'UTF-8'
tasks.withType(JavaCompile) {
    options.encoding = 'UTF-8'
}

ext {
	springVersion = '5.3.8'
	logbackVersion = '1.1.3'
	pluginsVersion = '0.1.0'
}

dependencies {
	compile "commons-io:commons-io:2.3"
	compile "commons-collections:commons-collections:3.2"
	compile "org.slf4j:slf4j-api:1.7.5"
	runtime "org.slf4j:jcl-over-slf4j:1.7.5"
	compile "ch.qos.logback:logback-core:1.0.13"
	compile "ch.qos.logback:logback-classic:1.0.13"
    compile "org.springframework:spring-core:" + springVersion
	compile "org.springframework:spring-aop:" + springVersion
	compile "org.springframework:spring-beans:" + springVersion
	compile "org.springframework:spring-web:" + springVersion
	compile "org.springframework:spring-webmvc:" + springVersion
	compile "org.springmodules:spring-modules-jakarta-commons:0.8"
	compile "org.freemarker:freemarker:2.3.17"
	compile "com.googlecode.json-simple:json-simple:1.1.1"
	compile "com.github.cage:cage:1.0"
	compile "com.itextpdf:itextpdf:5.5.13.2"
	compile "com.itextpdf:itext-pdfa:5.5.13.2"
	compile "com.itextpdf.tool:xmlworker:5.5.13.2"

	testCompile 'org.springframework:spring-test:' + springVersion

	providedCompile 'org.apache.tomcat:tomcat-websocket-api:9.0.45'
	providedCompile 'org.apache.tomcat:tomcat-servlet-api:9.0.45'
	provided 'org.apache.tomcat:tomcat-catalina:9.0.45'
    testCompile "junit:junit:4.+"
}

/* Multi-users environment */
// -Pprofile=develop
final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}/resources"
			}
		}
	}
}

test {
    systemProperties 'property': 'value'
}

// Release for your local
war {
	war.archiveName "ROOT.war"
}

task deployWar {
	copy {
		from 'build/libs/ROOT.war'
		into 'webapps'
		// into '/usr/local/tomcat/webapps'
		include '**/*.war'
	}
}

//$ gradle deployWar
// gradle -Pprofile=product deployWar
deployWar.dependsOn(war)

buildscript {
  repositories {
    jcenter()
  }
  dependencies {
    classpath "org.gretty:gretty:3.0.4"
  }
}
plugins {
    id 'java'
    id 'eclipse'
    id 'maven-publish'
    id 'war'
}

apply plugin: "org.gretty"

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
//	maven {
//		url 'http://localhost:8081/artifactory/libs-release-local'
//		allowInsecureProtocol = true
//	}
	mavenLocal()
	jcenter()
}

sourceCompatibility = '1.8'
targetCompatibility = '1.8'

version = '1.0.0.0'

ext {
	slf4jVersion = '1.7.36'
	logbackVersion = '1.3.4'
	springVersion = '5.3.8'
	pluginsVersion = '0.1.0'
	tomcatVersion = '9.0.68'
}

dependencies {
	implementation 'org.slf4j:slf4j-api:' + slf4jVersion
	runtimeOnly 'org.slf4j:jcl-over-slf4j:' + slf4jVersion
	implementation 'ch.qos.logback:logback-core:' + logbackVersion
	implementation 'ch.qos.logback:logback-classic:' + logbackVersion
	
	implementation "commons-io:commons-io:2.3"
	implementation "commons-collections:commons-collections:3.2"
    implementation "org.springframework:spring-core:" + springVersion
	implementation "org.springframework:spring-aop:" + springVersion
	implementation "org.springframework:spring-beans:" + springVersion
	implementation "org.springframework:spring-web:" + springVersion
	implementation "org.springframework:spring-webmvc:" + springVersion
	implementation "org.springmodules:spring-modules-jakarta-commons:0.8"
	implementation "org.freemarker:freemarker:2.3.17"
	implementation "com.googlecode.json-simple:json-simple:1.1.1"
	implementation "com.github.cage:cage:1.0"
	implementation "com.itextpdf:itextpdf:5.5.13.2"
	implementation "com.itextpdf:itext-pdfa:5.5.13.2"
	implementation "com.itextpdf.tool:xmlworker:5.5.13.2"

	testImplementation 'org.springframework:spring-test:' + springVersion

	providedCompile 'org.apache.tomcat:tomcat-servlet-api:' + tomcatVersion
	providedCompile 'org.apache.tomcat:tomcat-catalina:' + tomcatVersion

	testImplementation 'org.springframework:spring-test:' + springVersion
    testImplementation "junit:junit:4.+"
}

farm {
  // 'jetty7', 'jetty8', 'jetty9', 'jetty93', 'jetty94', 'tomcat7', 'tomcat8'
  servletContainer = 'jetty94'
}
gretty {
	// springBoot = true
	httpPort = 9001
	scanInterval = 1
	// Change context path (base url). otherwise defaults to name of project
	contextPath = ''
	httpsEnabled = true
	jacocoEnabled = false
}

/* Multi-users environment */
// -Pprofile=develop
final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}/resources"
			}
		}
	}
}

// Release for your local
war {
	war.archiveName "ROOT.war"
}

task deployWar {
	copy {
		from 'build/libs/ROOT.war'
		into 'webapps'
		// into '/usr/local/tomcat/webapps'
		include '**/*.war'
	}
}

//$ gradle deployWar
// gradle -Pprofile=product deployWar
deployWar.dependsOn(war)

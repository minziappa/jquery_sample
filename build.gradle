buildscript {
	repositories {
		jcenter()
		mavenCentral()
	}
	dependencies {
		classpath('org.springframework.boot:spring-boot-gradle-plugin:1.2.3.RELEASE')
		classpath ('com.sahlbach.gradle:gradle-jetty-eclipse-plugin:1.9.+')
		classpath ('org.ajoberstar:gradle-jacoco:0.1.0')
	}
}

apply plugin: 'java'
apply plugin: 'eclipse'
apply plugin: 'war'
apply plugin: 'jettyEclipse'

sourceCompatibility = '1.7'
targetCompatibility = '1.7'

version = '1.0'

jar {
    manifest {
        attributes 'Implementation-Title': 'Gradle Quickstart', 'Implementation-Version': version
    }
}

repositories {
    mavenCentral()
}

/*
compileTestJava {
	options.encoding = 'UTF-8'
}
compileJava {
	options.encoding = 'UTF-8'
}
*/

// For provided jars
configurations {
	provided
}

dependencies {
	compile "commons-io:commons-io:2.3"
	compile "commons-collections:commons-collections:3.2"
	compile "org.slf4j:slf4j-api:1.7.5"
	runtime "org.slf4j:jcl-over-slf4j:1.7.5"
	compile "ch.qos.logback:logback-core:1.0.13"
	compile "ch.qos.logback:logback-classic:1.0.13"
    compile "org.springframework:spring-core:4.1.6.RELEASE"
	compile "org.springframework:spring-aop:4.1.6.RELEASE"
	compile "org.springframework:spring-beans:4.1.6.RELEASE"
	compile "org.springframework:spring-web:4.1.6.RELEASE"
	compile "org.springframework:spring-webmvc:4.1.6.RELEASE"
	compile "org.springmodules:spring-modules-jakarta-commons:0.8"
	compile "org.freemarker:freemarker:2.3.17"
	compile "com.googlecode.json-simple:json-simple:1.1.1"
	compile "com.github.cage:cage:1.0"
	provided "org.apache.tomcat:servlet-api:6.0.33"
    testCompile "junit:junit:4.+"
}

/*
 * http://www.sonarqube.org/downloads/
# Gradle
export GRADLE_HOME=/Users/user_name/gradle
export PATH=$GRADLE_HOME/bin:$PATH
# If the contents are garbled, you must put the following option.
export GRADLE_OPTS="-Dfile.encoding=UTF-8 -Xmx512m -XX:PermSize=64m -XX:MaxPermSize=256m"

// http://netframework.tistory.com/401
// https://github.com/Khoulaiz/gradle-jetty-eclipse-plugin
*/

// gradle jettyEclipseRun
jettyEclipseRun {
	httpPort = 9000
	automaticReload = true
	// rebuildIntervalInSeconds = 1
}

/* Multi-users environment */
// -Pprofile=develop
final String DEFAULT_PROFILE = 'develop'
allprojects {
	if (!project.hasProperty('profile') || !profile) {
		ext.profile = DEFAULT_PROFILE
	}
	sourceSets {
		main {
			resources {
				srcDir "config/${profile}/resources"
			}
		}
	}
}

test {
    systemProperties 'property': 'value'
}

uploadArchives {
    repositories {
       flatDir {
           dirs 'repos'
       }
    }
}